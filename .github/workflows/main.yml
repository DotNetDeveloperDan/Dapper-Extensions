name: Build and Deploy NuGet Package

on:
  push:
    tags:
      - 'v*'   # Trigger on tags that start with "v" (e.g. v1.0.0)
  workflow_dispatch:  # Allow manual triggering of the workflow

permissions:
  id-token: write
  contents: read
  
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      COSIGN_EXPERIMENTAL: "1"
      COSIGN_TUF_SKIP: "true"
      COSIGN_TUF_CACHE_PATH: "/tmp/cosign-tuf"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
      
      # 1. Remove any old nuget.org v2 source and ensure we use the v3 source.
      - name: Remove old nuget.org source
        run: |
          dotnet nuget remove source nuget.org || true
          dotnet nuget add source https://api.nuget.org/v3/index.json --name nuget.org

      # 2. Restore dependencies
      - name: Restore Dependencies
        run: dotnet restore

      # 3. Build
      - name: Build
        run: dotnet build --configuration Release --no-restore

      # 4. Pack NuGet Package
      - name: Pack NuGet Package
        run: dotnet pack --configuration Release --no-build -o ./nupkgs

      # 5. Install cosign for Sigstore keyless signing
      - name: Install cosign
        run: |
          curl -s -L https://github.com/sigstore/cosign/releases/download/v2.4.3/cosign-linux-amd64 -o cosign
          chmod +x cosign
          sudo mv cosign /usr/local/bin/
        env:
          COSIGN_EXPERIMENTAL: "1"

      - name: Check cosign version
        run: cosign version

      # 6. Sign NuGet Package using Sigstore
      - name: Clear cosign TUF cache
        run: rm -rf $HOME/.cache/cosign/tuf

      - name: Sign NuGet Package with Sigstore
        run: |
          export COSIGN_TUF_SKIP=true
          export COSIGN_TUF_CACHE_PATH="/tmp/cosign-tuf"
          for pkg in ./nupkgs/*.nupkg; do
            echo "Signing $pkg"
            cosign sign --key "" "$pkg"
          done
        env:
          COSIGN_EXPERIMENTAL: "1"
          COSIGN_TUF_SKIP: "true"
          COSIGN_TUF_CACHE_PATH: "/tmp/cosign-tuf"

      # 7. Verify the package signatures
      - name: Verify Package Signature
        run: |
          for pkg in ./nupkgs/*.nupkg; do
            echo "Verifying signature for $pkg"
            cosign verify --keyless "$pkg"
          done

      # 8. Push Package to NuGet.org (v3)
      - name: Push Package to NuGet.org
        run: |
          dotnet nuget push ./nupkgs/*.nupkg \
          --api-key ${{ secrets.NUGET_API_KEY }} \
          --source https://api.nuget.org/v3/index.json \
          --skip-duplicate
